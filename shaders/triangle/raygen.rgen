#version 460
#extension GL_NV_ray_tracing : require

layout(binding = 0, set = 0) uniform accelerationStructureNV topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;
layout(binding = 2, set = 0) uniform CameraUniform {
	mat4 viewInverse;
	mat4 projectionInverse;
} camera;

layout(location = 0) rayPayloadNV vec3 hitValue;

void main() {
	const vec2 pixelCenter = vec2(gl_LaunchIDNV.xy) + vec2(0.5);
	const vec2 uv = pixelCenter/vec2(gl_LaunchSizeNV.xy) * 2.0 - 1.0;
	
	vec4 origin = camera.viewInverse * vec4(0.0, 0.0, 0.0, 1.0);
	vec4 target = camera.projectionInverse * vec4(uv.x, uv.y, 1.0, 1.0);
	vec4 direction = camera.viewInverse * vec4(normalize(target.xyz), 0.0);

	const uint cullMask = 0xff;
	const float tmin = 0.1;
	const float tmax = 10.0;

	traceNV(topLevelAS, gl_RayFlagsOpaqueNV, cullMask, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);

	imageStore(image, ivec2(gl_LaunchIDNV.xy), vec4(hitValue, 0.0));
}